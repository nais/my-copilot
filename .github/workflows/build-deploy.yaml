name: Build and deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: europe-north1-docker.pkg.dev/nais-io/nais/images

jobs:
  lint_build_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: 'https://npm.pkg.github.com'
          node-version: '22'
          cache: 'npm'
      - name: Install dependencies
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Run linter
        run: npm run lint
      - name: Build project
        run: npm run build
      - name: Run tests
        run: npm test

  build_push_sign:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: nais/platform-build-push-sign@main
        id: image
        with:
          name: my-copilot
          google_service_account: gh-my-copilot
          push: true
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          build_args: |
            READER_TOKEN=${{ secrets.READER_TOKEN }}
    outputs:
      version: ${{ steps.image.outputs.version }}

  rollout:
    permissions:
      id-token: write
    name: Deploy to NAIS
    needs: ["lint_build_test", "build_push_sign"]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        cluster: [dev-gcp, prod-gcp]
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: ${{ matrix.cluster }}
          TEAM: nais
          PRINT_PAYLOAD: "true"
          RESOURCE: ".nais/app.yaml"
          VARS: ".nais/${{ matrix.cluster }}.yaml"
          VAR: image=europe-north1-docker.pkg.dev/nais-io/nais/images/my-copilot:${{ needs.build_push_sign.outputs.version }},namespace=nais

  rollout_pr:
    permissions:
      id-token: write
      contents: read
      issues: write
    name: Deploy PR to dev-gcp
    needs: ["lint_build_test", "build_push_sign"]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          TEAM: nais
          PRINT_PAYLOAD: "true"
          RESOURCE: ".nais/app.yaml"
          VARS: ".nais/dev-gcp.yaml"
          VAR: image=europe-north1-docker.pkg.dev/nais-io/nais/images/my-copilot:${{ needs.build_push_sign.outputs.version }},namespace=nais
      - name: Post comment with link to PR deployment
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const token = core.getInput('github-token', { required: true });
              const github = new GitHub(token);
              const prNumber = context.payload.pull_request.number;
              const comment = `Deployed to [dev-gcp](https://min-copilot.intern.dev.nav.no/)`;

              const comments = await github.issues.listComments({
                ...context.repo,
                issue_number: prNumber,
              });

              if (comments && comments.data) {
                const existingComment = comments.data.find(comment => comment.body.includes('Deployed to [dev-gcp](https://min-copilot.intern.dev.nav.no/)'));
                if (!existingComment) {
                  await github.issues.createComment({
                    ...context.repo,
                    issue_number: prNumber,
                    body: comment
                  });
                }
              } else {
                console.error('Failed to fetch comments or no comments data found.');
              }
            } catch (error) {
              console.error(`An error occurred: ${error.message}`);
            }
